name: npm

on:
  workflow_dispatch:
    branches: [ '**' ]
  push:
    branches: [ '**' ]
  release:
    types:
      - created

env:
  TOKEN: ${{ secrets.SEEKRET_CI_TOKEN }}

jobs:
  npm-publish:
    name: npm-publish
    runs-on: ubuntu-20.04

    steps:
      - name: cancel redundant job
        uses: technote-space/auto-cancel-redundant-job@v1

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - uses: actions/cache@v2
        id: restore-cache
        with:
          path: frontend/node_modules
          key: protobuf-node-${{ hashFiles('package-lock.json') }}

      - name: Install Node.js dependencies
        run: |
          npm install

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: generate protots
        run: |
          python3 generate.py --ts

      - name: Get branch name for branch
        if: ${{ 'release' != github.event_name }}
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#"refs/heads/"})
          echo $BRANCH_NAME
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr /_ -)
          if [ $BRANCH_NAME == "main" ] ; then
            BRANCH_NAME=$(echo "main-$(date +"%D%T" | tr -d /:)")
            echo $BRANCH_NAME
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: delete older versions for branch
        if: ${{ github.ref != 'refs/heads/main' && 'release' != github.event_name }}
        run: |
          pip install requests
          python3 ./delete_old_versions.py 0.0.0-$BRANCH_NAME $TOKEN

      - name: pack package for branch
        if: ${{ 'release' != github.event_name }}
        run: |
          cd protots
          npm version 0.0.0-$BRANCH_NAME
          npm publish

      - name: delete older versions for release
        if: ${{ 'release' == github.event_name }}
        run: |
          pip install requests
          python3 ./delete_old_versions.py ${GITHUB_REF#"refs/tags/v"} $TOKEN

      - name: pack package for version
        if: ${{ 'release' == github.event_name }}
        run: |
          cd protots
          npm version ${GITHUB_REF#"refs/tags/v"}
          npm publish
